# Telegraf Configuration
# Configuration to parse pv data
# 
###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# # Configuration for sending metrics to InfluxDB
[[outputs.influxdb_v2]]
  namepass = ["Amps","AmpsPhaseA","AmpsPhaseB","AmpsPhaseC","VoltageAB","VoltageBC","VoltageCA","U1","U2","U3","Watts","Frequency","ApparentPower","ReactivePower","WattHour","TmpCab","OperationState"]

  ## The URLs of the InfluxDB cluster nodes.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  ##   ex: urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]
  urls = ["http://${DOCKER_INFLUXDB_INIT_HOST}:8086"]

  ## Token for authentication.
  token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"

  ## Organization is the name of the organization you wish to write to; must exist.
  organization = "$DOCKER_INFLUXDB_INIT_ORG"

  ## Destination bucket to write into.
  bucket = "pv" #"$DOCKER_INFLUXDB_INIT_BUCKET"

#   ## The value of this tag will be used to determine the bucket.  If this
#   ## tag is not set the 'bucket' option is used as the default.
#   # bucket_tag = ""
#
#   ## If true, the bucket tag will not be added to the metric.
#   # exclude_bucket_tag = false
#
#   ## Timeout for HTTP messages.
#   # timeout = "5s"
#
#   ## Additional HTTP headers
#   # http_headers = {"X-Special-Header" = "Special-Value"}
#
#   ## HTTP Proxy override, if unset values the standard proxy environment
#   ## variables are consulted to determine which proxy, if any, should be used.
#   # http_proxy = "http://corporate.proxy:3128"
#
#   ## HTTP User-Agent
#   # user_agent = "telegraf"
#
#   ## Content-Encoding for write request body, can be set to "gzip" to
#   ## compress body or "identity" to apply no encoding.
#   # content_encoding = "gzip"
#
#   ## Enable or disable uint support for writing uints influxdb 2.0.
#   # influx_uint_support = false
#
#   ## Optional TLS Config for use on HTTP connections.
#   # tls_ca = "/etc/telegraf/ca.pem"
#   # tls_cert = "/etc/telegraf/cert.pem"
#   # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  insecure_skip_verify = false


# # Print all metrics that pass through this filter.
# [[processors.printer]]
#   ## Maximum line length in bytes.  Useful only for debugging.
#   # influx_max_line_bytes = 0

#   ## When true, fields will be output in ascending lexical order.  Enabling
#   ## this option will result in decreased performance and is only recommended
#   ## when you need predictable ordering while debugging.
#   # influx_sort_fields = false

#   ## When true, Telegraf will output unsigned integers as unsigned values,
#   ## i.e.: `42u`.  You will need a version of InfluxDB supporting unsigned
#   ## integer values.  Enabling this option will result in field type errors if
#   ## existing data has been written.
#   # influx_uint_support = false

#   ## When true, Telegraf will omit the timestamp on data to allow InfluxDB
#   ## to set the timestamp of the data during ingestion. This is generally NOT
#   ## what you want as it can lead to data points captured at different times
#   ## getting omitted due to similar data.
#   # influx_omit_timestamp = false


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.modbus]]
  tagexclude = ["name", "slave_id", "type"]

  name = "blueplanet_nx3"
  controller = "tcp://192.168.178.46:502"
  slave_id = 3

  timeout = "5s"
  interval = "10s"

  ## Analog Variables, Input Registers and Holding Registers
  ## measurement - the (optional) measurement name, defaults to "modbus"
  ## name        - the variable name
  ## byte_order  - the ordering of bytes
  ##  |---AB, ABCD   - Big Endian
  ##  |---BA, DCBA   - Little Endian
  ##  |---BADC       - Mid-Big Endian
  ##  |---CDAB       - Mid-Little Endian
  ## data_type  - INT16, UINT16, INT32, UINT32, INT64, UINT64,
  ##              FLOAT32-IEEE, FLOAT64-IEEE (the IEEE 754 binary representation)
  ##              FLOAT32, FIXED, UFIXED (fixed-point representation on input)
  ## scale      - the final numeric variable representation
  ## address    - variable address
  holding_registers = [
    { name = "value", measurement = "Amps",            address = [40072], data_type = "UFIXED", byte_order = "AB", scale = 0.01 },
    { name = "value", measurement = "AmpsPhaseA",      address = [40073], data_type = "UFIXED", byte_order = "AB", scale = 0.01 },
    { name = "value", measurement = "AmpsPhaseB",      address = [40074], data_type = "UFIXED", byte_order = "AB", scale = 0.01 },
    { name = "value", measurement = "AmpsPhaseC",      address = [40075], data_type = "UFIXED",  byte_order = "AB", scale = 0.01 },
    # { name = "value", measurement = "A_SF",            address = [40076], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    { name = "value", measurement = "VoltageAB",       address = [40077], data_type = "UFIXED", byte_order = "AB", scale = 0.1 },
    { name = "value", measurement = "VoltageBC",       address = [40078], data_type = "UFIXED", byte_order = "AB", scale = 0.1 },
    { name = "value", measurement = "VoltageCA",       address = [40079], data_type = "UFIXED", byte_order = "AB", scale = 0.1 },
    { name = "value", measurement = "U1",              address = [40080], data_type = "UFIXED", byte_order = "AB", scale = 0.1 },
    { name = "value", measurement = "U2",              address = [40081], data_type = "UFIXED", byte_order = "AB", scale = 0.1 },
    { name = "value", measurement = "U3",              address = [40082], data_type = "UFIXED", byte_order = "AB", scale = 0.1 },
    { name = "value", measurement = "Watts",           address = [40084], data_type = "UFIXED",  byte_order = "AB", scale = 10.0 },
    # { name = "value", measurement = "W_SF",            address = [40085], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    { name = "value", measurement = "Frequency",       address = [40086], data_type = "UFIXED", byte_order = "AB", scale = 0.01 },
    { name = "value", measurement = "ApparentPower",   address = [40088], data_type = "FIXED",  byte_order = "AB", scale = 10.0 },
    { name = "value", measurement = "ReactivePower",   address = [40090], data_type = "UINT16", byte_order = "AB", scale = 10.0 },
    { name = "value", measurement = "PowerFactor",     address = [40092], data_type = "UINT16", byte_order = "AB", scale = 1.0 },
    { name = "value", measurement = "WattHour",        address = [40094, 40095], data_type = "FLOAT32", byte_order = "ABCD", scale = 0.01 },
    # { name = "value", measurement = "WH_SF",           address = [40096], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    { name = "value", measurement = "TmpCab",          address = [40103], data_type = "FIXED",  byte_order = "AB", scale = 1.0 },
    # { name = "value", measurement = "Tmp_SF",          address = [40107], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    { name = "value", measurement = "OperationState",  address = [40108], data_type = "FIXED",  byte_order = "AB", scale = 1.0 },
    # { name = "value", measurement = "Event1",          address = [40110], data_type = "INT16",  byte_order = "AB", scale = 1.0 }


    # { name = "value", measurement = "Amps",            address = [40072], data_type = "UINT16", byte_order = "AB", scale = 0.01 },
    # { name = "value", measurement = "AmpsPhaseA",      address = [40073], data_type = "UINT16", byte_order = "AB", scale = 0.01 },
    # { name = "value", measurement = "AmpsPhaseB",      address = [40074], data_type = "UINT16", byte_order = "AB", scale = 0.01 },
    # { name = "value", measurement = "AmpsPhaseC",      address = [40075], data_type = "INT16",  byte_order = "AB", scale = 0.01 },
    # # { name = "value", measurement = "A_SF",            address = [40076], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    # { name = "value", measurement = "VoltageAB",       address = [40077], data_type = "UINT16", byte_order = "AB", scale = 0.1 },
    # { name = "value", measurement = "VoltageBC",       address = [40078], data_type = "UINT16", byte_order = "AB", scale = 0.1 },
    # { name = "value", measurement = "VoltageCA",       address = [40079], data_type = "UINT16", byte_order = "AB", scale = 0.1 },
    # { name = "value", measurement = "U1",              address = [40080], data_type = "UINT16", byte_order = "AB", scale = 0.1 },
    # { name = "value", measurement = "U2",              address = [40081], data_type = "UINT16", byte_order = "AB", scale = 0.1 },
    # { name = "value", measurement = "U3",              address = [40082], data_type = "UINT16", byte_order = "AB", scale = 0.1 },
    # { name = "value", measurement = "Watts",           address = [40084], data_type = "INT16",  byte_order = "AB", scale = 10.0 },
    # # { name = "value", measurement = "W_SF",            address = [40085], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    # { name = "value", measurement = "Frequency",       address = [40086], data_type = "UINT16", byte_order = "AB", scale = 0.01 },
    # { name = "value", measurement = "ApparentPower",   address = [40088], data_type = "INT16",  byte_order = "AB", scale = 10.0 },
    # { name = "value", measurement = "ReactivePower",   address = [40090], data_type = "UINT16", byte_order = "AB", scale = 10.0 },
    # # { name = "value", measurement = "PowerFactor",     address = [40092], data_type = "UINT16", byte_order = "AB", scale = 1.0 },
    # { name = "value", measurement = "WattHour",        address = [40094, 40095], data_type = "UINT32", byte_order = "ABCD", scale = 0.01 },
    # # { name = "value", measurement = "WH_SF",           address = [40096], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    # { name = "value", measurement = "TmpCab",          address = [40103], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    # # { name = "value", measurement = "Tmp_SF",          address = [40107], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    # { name = "value", measurement = "OperationState",  address = [40108], data_type = "INT16",  byte_order = "AB", scale = 1.0 },
    # # { name = "value", measurement = "Event1",          address = [40110], data_type = "INT16",  byte_order = "AB", scale = 1.0 }
  ]
